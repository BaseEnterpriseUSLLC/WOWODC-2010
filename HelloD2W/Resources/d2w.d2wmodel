{
  "rules" = (
    {"author" = "0"; "class" = "com.webobjects.directtoweb.Rule"; "documentation" = "Since the Movie entity has a relationship to an ERAttachment, the default propertyKeys will include a WOFileUpload. That will require an explicit form encoding."; "lhs" = {"class" = "com.webobjects.eocontrol.EOAndQualifier"; "qualifiers" = ({"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo"; "value" = "edit"; }, {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "entity.name"; "selectorName" = "isEqualTo"; "value" = "Movie"; }); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "formEncoding"; "value" = "multipart/form-data"; }; }, 
    {"author" = "40"; "class" = "com.webobjects.directtoweb.Rule"; "documentation" = "Default navigationState"; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "navigationState"; "value" = "Home"; }; }, 
    {"author" = "50"; "class" = "com.webobjects.directtoweb.Rule"; "documentation" = "Default tab state for movie pages"; "lhs" = {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "pageConfiguration"; "selectorName" = "isLike"; "value" = "*Movie*"; }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "navigationState"; "value" = "Movie"; }; }, 
    {"author" = "50"; "class" = "com.webobjects.directtoweb.Rule"; "documentation" = "Default state for 'customer' pages"; "lhs" = {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "pageConfiguration"; "selectorName" = "isLike"; "value" = "*Customer*"; }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "navigationState"; "value" = "Customer"; }; }, 
    {"author" = "60"; "class" = "com.webobjects.directtoweb.Rule"; "documentation" = "Setting a navigation state like this means that any time we are on a CreateMovie page configuration, the navigation menu will display the Movie and CreateMovie tabs as selected, even if we navigate there without clicking the navigation menu."; "lhs" = {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "pageConfiguration"; "selectorName" = "isEqualTo"; "value" = "CreateMovie"; }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "navigationState"; "value" = "Movie.CreateMovie"; }; }, 
    {"author" = "100"; "class" = "com.webobjects.directtoweb.Rule"; "documentation" = "The look key used to enable ERModernLook pages"; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "look"; "value" = "ERModernLook"; }; }, 
    {"author" = "100"; "class" = "com.webobjects.directtoweb.Rule"; "documentation" = "Displays to many relationships in a list rather than using the default display string component. This gives us a nice, readable table rather than the toString value of a EOCheapCopyMutableArray or somesuch."; "lhs" = {"class" = "com.webobjects.eocontrol.EOAndQualifier"; "qualifiers" = ({"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo"; "value" = "inspect"; }, {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "smartRelationship.isToMany"; "selectorName" = "isEqualTo"; "value" = {"class" = "java.lang.Number"; "value" = "1"; }; }); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "componentName"; "value" = "ERDList"; }; }, 
    {"author" = "100"; "class" = "com.webobjects.directtoweb.Rule"; "documentation" = "The default keys supplied by the rule system were not very helpful with this object, so we redefine them. You can see that key paths are also allowed.  Additionally, we can also use @key array operators for quick calculations."; "lhs" = {"class" = "com.webobjects.eocontrol.EOAndQualifier"; "qualifiers" = ({"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo"; "value" = "select"; }, {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "entity.name"; "selectorName" = "isEqualTo"; "value" = "Video"; }); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "displayPropertyKeys"; "value" = ("movie.title", "rentalTerms.cost"); }; }, 
    {"author" = "100"; "class" = "com.webobjects.directtoweb.Rule"; "documentation" = "Basically, any time we see a Video EO as a relationship to another EO, this will list the video by its movie title."; "lhs" = {"class" = "com.webobjects.eocontrol.EOAndQualifier"; "qualifiers" = ({"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "propertyType"; "selectorName" = "isEqualTo"; "value" = "r"; }, {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "smartRelationship.destinationEntity.name"; "selectorName" = "isEqualTo"; "value" = "Video"; }); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "keyWhenRelationship"; "value" = "movie.title"; }; }, 
    {"author" = "100"; "class" = "com.webobjects.directtoweb.Rule"; "documentation" = "The default keys supplied by the rule system were not very helpful with this object, so we redefine them. You can see that key paths are also allowed.  Additionally, we can also use @key array operators for quick calculations."; "lhs" = {"class" = "com.webobjects.eocontrol.EOAndQualifier"; "qualifiers" = ({"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo"; "value" = "list"; }, {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "entity.name"; "selectorName" = "isEqualTo"; "value" = "Rental"; }); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "displayPropertyKeys"; "value" = ("unit.video.movie.title", "dateOut", "dateReturned"); }; }, 
    {"author" = "100"; "class" = "com.webobjects.directtoweb.Rule"; "documentation" = "Overrides the default display string component used.  This way, we get items listed rather than their toString which isn't so pretty."; "lhs" = {"class" = "com.webobjects.eocontrol.EOAndQualifier"; "qualifiers" = ({"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "smartRelationship"; "selectorName" = "isNotEqualTo"; "value" = {"class" = "com.webobjects.foundation.NSKeyValueCoding$Null"; }; }, {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "smartRelationship.isToMany"; "selectorName" = "isEqualTo"; "value" = {"class" = "java.lang.Number"; "value" = "0"; }; }, {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo"; "value" = "inspect"; }); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "componentName"; "value" = "ERD2WDisplayToOne"; }; }, 
    {"author" = "100"; "class" = "com.webobjects.directtoweb.Rule"; "documentation" = "Example rule demonstrating how to load a nextPageDelegate via rules rather than calling setNextPageDelegate() on the page."; "lhs" = {"class" = "com.webobjects.eocontrol.EOAndQualifier"; "qualifiers" = ({"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "RuleIsDisabled"; "selectorName" = "isEqual"; "value" = "YES"; }, {"class" = "com.webobjects.eocontrol.EOAndQualifier"; "qualifiers" = ({"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo"; "value" = "select"; }, {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "entity.name"; "selectorName" = "isEqualTo"; "value" = "Video"; }, {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "navigationState"; "selectorName" = "isEqualTo"; "value" = "Customer.RentMovies"; }); }); }; "rhs" = {"class" = "ERDDelayedObjectCreationAssignment"; "keyPath" = "nextPageDelegate"; "value" = "com.wowodc2010.helloD2W.delegates.RentMoviesDelegate"; }; }, 
    {"author" = "100"; "class" = "com.webobjects.directtoweb.Rule"; "documentation" = "Creating a tab inspect or edit page is as easy as using a pageConfiguration like \"EditTab*\" or \"InspectTab*\".  You can also set the subTask to 'tab' and get the same effect."; "lhs" = {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "pageConfiguration"; "selectorName" = "isEqualTo"; "value" = "InspectTabCustomer"; }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "displayPropertyKeys"; "value" = ("[personalInfo]", "(identity)", "firstName", "lastName", "(address)", "streetAddress", "city", "state", "zip", "[customerInfo]", "(membership)", "memberSince", "(creditCard)", "creditCard.cardNumber", "creditCard.expirationDate", "creditCard.limit"); }; }, 
    {"author" = "101"; "class" = "com.webobjects.directtoweb.Rule"; "documentation" = "In order to use the pageControllerAction, we need to specify a component name for it that overrides the default property level component. If we do not, the default will throw an error since it will try to find \"pageControllerAction\" as a key on our object.  ERDControllerButton is designed to work here, and it will look for the pageController on our ERD2W page.  So, we will define that with another rule."; "lhs" = {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "propertyKey"; "selectorName" = "isEqualTo"; "value" = "pageControllerAction"; }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "componentName"; "value" = "ERDControllerButton"; }; }, 
    {"author" = "101"; "class" = "com.webobjects.directtoweb.Rule"; "documentation" = "Finally, we have our page controller working. Now we want to limit the returnVideo action to only those objects that are checked out."; "lhs" = {"class" = "com.webobjects.eocontrol.EOAndQualifier"; "qualifiers" = ({"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "pageConfiguration"; "selectorName" = "isEqualTo"; "value" = "ListRental"; }, {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "object.isOut"; "selectorName" = "isEqualTo"; "value" = "0"; }); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "branchChoices"; "value" = (); }; }, 
    {"author" = "101"; "class" = "com.webobjects.directtoweb.Rule"; "documentation" = "Finally, we have our page controller working. Now we want to limit the returnVideo action to only those objects that are checked out."; "lhs" = {"class" = "com.webobjects.eocontrol.EOAndQualifier"; "qualifiers" = ({"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "pageConfiguration"; "selectorName" = "isEqualTo"; "value" = "ListRental"; }, {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "object.isOut"; "selectorName" = "isEqualTo"; "value" = "1"; }); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "branchChoices"; "value" = ("returnVideo"); }; }, 
    {"author" = "101"; "class" = "com.webobjects.directtoweb.Rule"; "documentation" = "The actions RHS key allows us to specify what actions will be listed in our rentals list table.  Here we use the inspectAction which is already set up in ERMOD and we create a new one: pageControllerAction"; "lhs" = {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "pageConfiguration"; "selectorName" = "isEqualTo"; "value" = "ListRental"; }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "actions"; "value" = {"right" = ("inspectAction", "pageControllerAction"); }; }; }, 
    {"author" = "101"; "class" = "com.webobjects.directtoweb.Rule"; "documentation" = "Since the ERDControllerButton needs an ERDBranchDelegate to work, we set one our custom branch delegate on the ListRental page with this rule."; "lhs" = {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "pageConfiguration"; "selectorName" = "isEqualTo"; "value" = "ListRental"; }; "rhs" = {"class" = "ERDDelayedObjectCreationAssignment"; "keyPath" = "pageController"; "value" = "com.wowodc2010.helloD2W.delegates.ListRentalDelegate"; }; }
  ); 
}