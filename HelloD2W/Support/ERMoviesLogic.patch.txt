Index: .classpath
===================================================================
--- .classpath	(revision 11131)
+++ .classpath	(working copy)
@@ -13,5 +13,7 @@
 	<classpathentry kind="con" path="WOFramework/ERAttachment"/>
 	<classpathentry kind="con" path="WOFramework/ERPrototypes"/>
 	<classpathentry kind="con" path="WOFramework/ERTaggable"/>
+	<classpathentry kind="con" path="WOFramework/ERCoreBusinessLogic"/>
+	<classpathentry kind="con" path="WOFramework/ERJavaMail"/>
 	<classpathentry kind="output" path="bin"/>
 </classpath>
Index: Sources/webobjectsexamples/businesslogic/rentals/common/User.java
===================================================================
--- Sources/webobjectsexamples/businesslogic/rentals/common/User.java	(revision 11131)
+++ Sources/webobjectsexamples/businesslogic/rentals/common/User.java	(working copy)
@@ -1,7 +1,7 @@
 /*
- * User.java [JavaBusinessLogic Project] © Copyright 2005 Apple Computer, Inc. All rights reserved. IMPORTANT: This Apple software is supplied to you by Apple Computer, Inc. (ÒAppleÓ) in consideration of your agreement to the following terms, and your use, installation, modification or
+ * User.java [JavaBusinessLogic Project] ï¿½ Copyright 2005 Apple Computer, Inc. All rights reserved. IMPORTANT: This Apple software is supplied to you by Apple Computer, Inc. (ï¿½Appleï¿½) in consideration of your agreement to the following terms, and your use, installation, modification or
  * redistribution of this Apple software constitutes acceptance of these terms. If you do not agree with these terms, please do not use, install, modify or redistribute this Apple software. In consideration of your agreement to abide by the following terms, and subject to these terms, Apple grants
- * you a personal, non-exclusive license, under AppleÕs copyrights in this original Apple software (the ÒApple SoftwareÓ), to use, reproduce, modify and redistribute the Apple Software, with or without modifications, in source and/or binary forms; provided that if you redistribute the Apple Software
+ * you a personal, non-exclusive license, under Appleï¿½s copyrights in this original Apple software (the ï¿½Apple Softwareï¿½), to use, reproduce, modify and redistribute the Apple Software, with or without modifications, in source and/or binary forms; provided that if you redistribute the Apple Software
  * in its entirety and without modifications, you must retain this notice and the following text and disclaimers in all such redistributions of the Apple Software. Neither the name, trademarks, service marks or logos of Apple Computer, Inc. may be used to endorse or promote products derived from the
  * Apple Software without specific prior written permission from Apple. Except as expressly stated in this notice, no other rights or licenses, express or implied, are granted by Apple herein, including but not limited to any patent rights that may be infringed by your derivative works or by other
  * works in which the Apple Software may be incorporated. The Apple Software is provided by Apple on an "AS IS" basis. APPLE MAKES NO WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE IMPLIED WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE,
@@ -13,9 +13,13 @@
 package webobjectsexamples.businesslogic.rentals.common;
 
 import com.webobjects.eocontrol.EOEditingContext;
+import com.webobjects.eocontrol.EOEnterpriseObject;
 import com.webobjects.eocontrol.EOGenericRecord;
+import com.webobjects.foundation.NSArray;
 
-public class User extends EOGenericRecord {
+import er.corebusinesslogic.ERCoreUserInterface;
+
+public class User extends EOGenericRecord implements ERCoreUserInterface {
 	private static final long	serialVersionUID			= -4880721435398743375L;
 
 	public static final String	AccessLevelKey				= "accessLevel";
@@ -33,12 +37,31 @@
 	public static final int		EmployeeAccessLevel			= 2;
 
 	public static final int		AdministratorAccessLevel	= 1;
+	
+	public static final String 	PreferencesKey				= "preferences";
 
 	public User() {
 		super();
 	}
 
 	@Override
+	public NSArray preferences() {
+		// TODO Auto-generated method stub
+		return (NSArray)storedValueForKey(PreferencesKey);
+	}
+
+	@Override
+	public void setPreferences(NSArray array) {
+		takeStoredValueForKey(array.mutableClone(), PreferencesKey);
+		
+	}
+
+	@Override
+	public void newPreference(EOEnterpriseObject pref) {
+		addObjectToBothSidesOfRelationshipWithKey(pref, PreferencesKey);
+	}
+
+	@Override
 	public void awakeFromInsertion(EOEditingContext editingContext) {
 		super.awakeFromInsertion(editingContext);
 		if (accessLevel() == null) {
